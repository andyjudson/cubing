{
  "version": 3,
  "sources": ["../../../../node_modules/random-uint-below/dist/esm/index.js"],
  "sourcesContent": ["// src/random-uint-below/randomUIntBelow.ts\nvar MAX_JS_PRECISE_INT = 9007199254740992;\nvar UPPER_HALF_MULTIPLIER = 2097152;\nvar LOWER_HALF_DIVIDER = 2048;\nfunction crypto() {\n  const { crypto: crypto2 } = globalThis;\n  if (!crypto2) {\n    const { node: nodeVersion } = globalThis.process?.versions;\n    if (nodeVersion && parseInt(nodeVersion.split(\".\")[0]) < 19) {\n      throw new Error(\n        \"`node` 19 or above is required for randomization using `random-uint-below`\"\n      );\n    }\n  }\n  return crypto2;\n}\nfunction random53BitNumber() {\n  const arr = new Uint32Array(2);\n  crypto().getRandomValues(arr);\n  const upper = arr[0];\n  const lower = arr[1];\n  return Math.floor(upper * UPPER_HALF_MULTIPLIER) + Math.floor(lower / LOWER_HALF_DIVIDER);\n}\nfunction validateMax(max) {\n  if (typeof max !== \"number\" || max < 0 || Math.floor(max) !== max) {\n    throw new Error(\n      \"randomUIntBelow() not called with a positive integer value.\"\n    );\n  }\n  if (max > MAX_JS_PRECISE_INT) {\n    throw new Error(\n      `Called randomUIntBelow() with max === ${max}, which is larger than JavaScript can handle with integer precision.`\n    );\n  }\n}\nfunction randomUIntBelow(max) {\n  validateMax(max);\n  let val = random53BitNumber();\n  const maxUniformSamplingRange = Math.floor(MAX_JS_PRECISE_INT / max) * max;\n  while (val >= maxUniformSamplingRange) {\n    return val = random53BitNumber();\n  }\n  return val % max;\n}\n\n// src/random-uint-below/array-operations.ts\nfunction randomChoice(arr) {\n  return arr[randomUIntBelow(arr.length)];\n}\nasync function randomPermuteInPlace(arr) {\n  for (let i = 1; i < arr.length; i++) {\n    const j = randomUIntBelow(i);\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n}\nexport {\n  randomChoice,\n  randomPermuteInPlace,\n  randomUIntBelow\n};\n"],
  "mappings": ";AACA,IAAI,qBAAqB;AACzB,IAAI,wBAAwB;AAC5B,IAAI,qBAAqB;AACzB,SAAS,SAAS;AAChB,QAAM,EAAE,QAAQ,QAAQ,IAAI;AAC5B,MAAI,CAAC,SAAS;AACZ,UAAM,EAAE,MAAM,YAAY,IAAI,WAAW,SAAS;AAClD,QAAI,eAAe,SAAS,YAAY,MAAM,GAAG,EAAE,CAAC,CAAC,IAAI,IAAI;AAC3D,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,oBAAoB;AAC3B,QAAM,MAAM,IAAI,YAAY,CAAC;AAC7B,SAAO,EAAE,gBAAgB,GAAG;AAC5B,QAAM,QAAQ,IAAI,CAAC;AACnB,QAAM,QAAQ,IAAI,CAAC;AACnB,SAAO,KAAK,MAAM,QAAQ,qBAAqB,IAAI,KAAK,MAAM,QAAQ,kBAAkB;AAC1F;AACA,SAAS,YAAY,KAAK;AACxB,MAAI,OAAO,QAAQ,YAAY,MAAM,KAAK,KAAK,MAAM,GAAG,MAAM,KAAK;AACjE,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACA,MAAI,MAAM,oBAAoB;AAC5B,UAAM,IAAI;AAAA,MACR,yCAAyC,GAAG;AAAA,IAC9C;AAAA,EACF;AACF;AACA,SAAS,gBAAgB,KAAK;AAC5B,cAAY,GAAG;AACf,MAAI,MAAM,kBAAkB;AAC5B,QAAM,0BAA0B,KAAK,MAAM,qBAAqB,GAAG,IAAI;AACvE,SAAO,OAAO,yBAAyB;AACrC,WAAO,MAAM,kBAAkB;AAAA,EACjC;AACA,SAAO,MAAM;AACf;AAGA,SAAS,aAAa,KAAK;AACzB,SAAO,IAAI,gBAAgB,IAAI,MAAM,CAAC;AACxC;",
  "names": []
}
